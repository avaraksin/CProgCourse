
@inject ProtectedSessionStorage ProtectedSessionStore


    @if (isLoaded)
    {
        <CascadingValue Value="@this">
            @ChildContent
        </CascadingValue>
    }
    else
    {
        <p>Чтение данных...</p>
    }

@code {
    private bool isLoaded;

    [Parameter]
    public int CurrentClientNum { get; set; } = 0;
    [Parameter]
    public Users? CurrentUser { get; set; }
    [Parameter]
    public int ListId { get; set; } = 1;
    [Parameter]
    public ClientTab? CurrentBase { get; set; }
    [Parameter]
    public Listname? SelectedListname { get; set; }

    [Parameter]
    public bool DebugMode { get; set; } = false;

    [Parameter]
    public FormOnDisplay displayForm { get; set; } = FormOnDisplay.FormMain;

    [Parameter]
    public EventCallback OnDblClickCallback { get; set; }


    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var result = await ProtectedSessionStore.GetAsync<int>("clnum");
        CurrentClientNum = result.Success ? result.Value : 0;

        result = await ProtectedSessionStore.GetAsync<int>("listid");
        ListId = result.Success ? result.Value : 1;
        if (ListId == 0)
        {
            ListId = 1;
        }

        var uresult = await ProtectedSessionStore.GetAsync<Users>("user");
        CurrentUser = uresult.Success ? uresult.Value : null;

        var bresult = await ProtectedSessionStore.GetAsync<ClientTab>("base");
        CurrentBase = bresult.Success ? bresult.Value : null;


        isLoaded = true;
    }


    public async Task SaveChangesAsync()
    {
        await ProtectedSessionStore.SetAsync("clnum", CurrentClientNum);
        await ProtectedSessionStore.SetAsync("listid", ListId);
        await ProtectedSessionStore.SetAsync("user", CurrentUser);
        await ProtectedSessionStore.SetAsync("base", CurrentBase);
    }

}
