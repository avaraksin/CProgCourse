@page "/Listnamedata"

@using Logist.Interfaces;
@using Logist.Data;
@using Logist.PageHelp


@inject ICtrlListname _ctrllistname
@inject ICtrlLists _ctrllists

<PageTitle>Справочники</PageTitle>

<h1>Справочники</h1>


@if (listname == null)
{
    <p><em>Loading...</em></p>
}
else
{
   <Select TValue="int" SelectedValue="@idList" SelectedValueChanged="@OnSelectedValueChanged" >
    @if (_ctrllists.GetLists() != null)
        {
            @foreach (var list in _ctrllists.GetLists())
            {
                <SelectItem Value=@list.id>@list.Name</SelectItem>
            }

    }
    </Select>

<Button Color="Color.Secondary" Outline Clicked="@(async () => HandleClick())">Новый</Button>

    <p> </p>
    <Table Hoverable Bordered>
        <TableHeader >
        <TableRow>
            <TableHeaderCell>№№</TableHeaderCell>
            <TableHeaderCell>Наименование</TableHeaderCell>
            <TableHeaderCell>Комментарий</TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
       
        @if (listname.Count > 0)
        {
            index = 0;
            @foreach (Listname list in listname)
            {
                    <TableRow @ondblclick="@(() => HandleClick(list.id.ToString()))" >
                        <TableRowCell>@(listname.IndexOf(list) + 1)</TableRowCell>
                        <TableRowCell Filterable = "@true">@list.Name</TableRowCell>
                        <TableRowCell>@list.Comment</TableRowCell>
                    </TableRow>

                    index++;
             }
         }
       
    </TableBody>
</Table>

<ChildComponent @ref = "@childComponent" />

}
@code {
    private List<Listname>? listname;
    public int idList = 1;
    int index;
    ChildComponent childComponent;

    protected override async Task OnInitializedAsync()
    {
        listname = await Task.FromResult(_ctrllistname?.GetListname()?.Where(l => l.Idlist == idList).ToList());
    }

    async Task OnSelectedValueChanged( int value )
    {
        idList = value;
        await OnInitializedAsync();
    }

    async Task HandleClick(string myParam = "0")
    {
        childComponent.OnEditBtClick(idList, int.Parse(myParam), this);
    }

    public async Task Refr()
    {
       // await InvokeAsync(() =>{StateHasChanged();});
    }

}