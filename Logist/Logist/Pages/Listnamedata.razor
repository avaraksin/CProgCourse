@page "/Listnamedata"

@using Logist.Interfaces;
@using Logist.Data;


@inject ICtrlListname _ctrllistname
@inject ICtrlLists _ctrllists


<PageTitle>Listnamedata</PageTitle>
<h1>Справочники</h1>


@if (listname == null)
{
    <p><em>Loading...</em></p>
}
else
{
   <Select TValue="int" SelectedValue="@selectedValue" SelectedValueChanged="@OnSelectedValueChanged" >
    @foreach (var list in _ctrllists.GetLists())
        {
            <SelectItem Value=@list.id>@list.Name</SelectItem>
        }
</Select>

    <p> </p>
    <table class="table table-striped align-middle table-bordered">
        <thead class="table-success">
            <tr>
                <th>clnum</th>
                <th>idList</th>
                <th>ID</th>
                <th>Name</th>
                <th>Name2</th>
                <th>CUSER</th>
                <th>CHDATE</th>
               
            </tr>
        </thead>
        <tbody>
            @foreach (Listname list in listname)
            {
                <tr>
                    <td>@list.clnum</td>
                    <td>@list.Idlist</td>
                    <td>@list.id</td>
                    <td>@list.Name</td>
                    <td>@list.name2</td>
                    <td>@list.cuser</td>
                    <td>@list.chdate</td>
                    <td>
                        
                    </td>
                </tr>
            }
        </tbody>

    </table>
}
@code {
    private List<Listname>? listname;
    int selectedValue = 1;

    protected override async Task OnInitializedAsync()
    {

        listname = await Task.FromResult(_ctrllistname.GetListname().Where(l => l.Idlist == selectedValue).ToList());
        //listname = await Task.FromResult(_factorylistname.GetListName());
    }

    async Task OnSelectedValueChanged( int value )
    {
        selectedValue = value;
        Console.WriteLine( selectedValue );
        await OnInitializedAsync();
        //return await Task.CompletedTask;
    }

}