@using MudBlazor

@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AppStatus _appStatus

@inject CtrlUsers _cuser




<PageTitle>Logist</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row">
<!-- ************************************************************************************************** -->      
        <MudPaper Height="50px" Width="300px" Elevation="1">
            <MudSelect Margin="MudBlazor.Margin.Dense" T="Users" Label="Укажите Пользователя" 
                Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" FullWidth = "false"
                @bind-Value="@currentUser" SelectedValuesChanged = "@OnChanged">
        @foreach (var u in users)
        {
            <MudSelectItem T="Users" Value="@u">@u.Shortname</MudSelectItem>
        }
        </MudSelect></MudPaper>


        <MudPaper Height="50px" Width="300px" Elevation="1">
            <MudSelect Margin="MudBlazor.Margin.Dense" T="int" Label="Укажите номер клиента" 
                Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" FullWidth = "false"
                @bind-Value="@CLNUM" SelectedValuesChanged = "@OnChanged">
        @for (int i = 1; i <=6; i++)
        {
            int index = i;
            <MudSelectItem T="int" Value="@index" />
        }


        </MudSelect></MudPaper>
<!-- ************************************************************************************************** -->
        </div>

        <article class="content px-4">
            @Body
        </article>

        <MudThemeProvider/>
        <MudDialogProvider/>
        <MudSnackbarProvider/>
    </main>
</div>

@code {
    private int CLNUM { get; set; }
    private Users currentUser { get; set; }
    private List<Users> users;

    [CascadingParameter]
    private UserProvider? UserProvider { get; set; }

    protected override async Task OnInitializedAsync()
    {
        users = _cuser.GetUsers();
        CLNUM = UserProvider.CurrentClientNum;
        currentUser = users?.FirstOrDefault(x => x.id == UserProvider?.CurrentUser?.id);
        
        await base.OnInitializedAsync();
    }

    void OnChanged()
    {
        _appStatus.clnum = CLNUM;
        _appStatus.UpdateState();

        UserProvider.CurrentClientNum = CLNUM;
        UserProvider.CurrentUser = currentUser;
        UserProvider.SaveChangesAsync();
    }

    
}
